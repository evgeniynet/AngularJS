import { Config, Nav, NavParams } from 'ionic-angular';
import { DataProvider } from '../../providers/data-provider';
import { TicketProvider } from '../../providers/ticket-provider';
import { Renderer, EventEmitter } from "@angular/core";
export declare class UploadButtonComponent {
    private nav;
    private renderer;
    private config;
    private nativeInputBtn;
    filesSelected: EventEmitter<any>;
    filesUploaded: EventEmitter<any>;
    private fileDest;
    private filesExist;
    private btnStyle;
    private allowMultiple;
    private multi;
    private error;
    private files;
    private in_progress;
    private MAX_SIZE;
    private logCallback;
    constructor(nav: Nav, renderer: Renderer, config: Config);
    ngOnInit(): void;
    upload(url: string, files: File[]): Promise<any>;
    onUpload(is_Close?: any): void;
    reset(file?: any): void;
    callback(event: Event): void;
    filesAdded(event: Event): void;
    add_tag(name: any, tag: any): string;
    private log;
    humanizeBytes(bytes: number): string;
    isImage(url: any): "md-document" | "md-image";
    isFile(file: any): boolean;
}
export declare class TicketDetailsPage {
    private nav;
    private navParams;
    private ticketProvider;
    private dataProvider;
    private config;
    counts: any;
    ticket: any;
    userphone: string;
    details_tab: string;
    active: boolean;
    waiting_response: boolean;
    he: any;
    techname: string;
    username: string;
    selects: any;
    select_button: any;
    ticketnote: string;
    attachments: any;
    is_editworkpad: boolean;
    cachename: string;
    closed_index: number;
    fileDest: any;
    files: any;
    is_showlogs: boolean;
    posts: any;
    constructor(nav: Nav, navParams: NavParams, ticketProvider: TicketProvider, dataProvider: DataProvider, config: Config);
    onPageLoaded(): void;
    initSelects(data: any): void;
    uploadedFile(event: any): void;
    selectedFile(event: any): void;
    getPosts(key: any): void;
    getProfile(user_id: any): void;
    processDetails(data: any, isShortInfo?: any): void;
    redirectOnEmpty(): void;
    saveSelect(event: any): void;
    onSubmit(isClose?: any): void;
    saveNote(form: any): void;
    saveWorkpad(form: any): void;
    openAlert(name: any, value: any): void;
    saveWorkpadSuccess(workpad: any): void;
    saveNoteSuccess(note: any): void;
    onClose(isForce?: any): void;
    onHold(): void;
    onUpdate(): void;
    transferTicket(event: any): void;
    pickUp(): void;
    onDelete(file: any): void;
    reopenTicket(): void;
    update_tlist_logic(is_close: any): void;
    closeTicket(): void;
    addTime(): void;
    addExpense(): void;
    addFilesButton(): void;
    Escalate(is_escalate?: any): void;
    getFullapplink(ticketkey: any): void;
    getMailTolink(ticketkey: any): void;
    getFullName(firstname: any, lastname: any, email: any, name: any): string;
    getCurrency(value: any): string;
    getFileLink(file: any): string;
    setDate(date: any, showmonth?: any, istime?: any): any;
}
